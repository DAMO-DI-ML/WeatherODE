seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: ${oc.env:OUTPUT_DIR,./202408_36hours}

  precision: 16

  gpus: null
  num_nodes: 1
  accelerator: gpu
  strategy: ddp

  min_epochs: 1
  max_epochs: 100
  enable_progress_bar: true

  sync_batchnorm: True
  enable_checkpointing: True
  resume_from_checkpoint: null

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.wandb.WandbLogger
    init_args:
      # name: "${model.name}_${oc.env:SLURM_JOB_ID}" # name of the run (normally generated by wandb)
      name: "predict_72h_multi_gt_with_noise_ViT_ode_linear_term_72steps_skip_all_nan_0.001_all_multi_val_ode_lr=1e-4_else_5e-4_3DNoise_with_v_x"
      # name: "predict_6h_multi_gt_finetune_noise_1e-4_2DNoise"
      save_dir: ${trainer.default_root_dir}/logs
      offline: False
      id: null # pass correct id to resume experiment!
      anonymous: null # enable anonymous logging
      project: "era5"
      log_model: False # upload lightning ckpts
      prefix: "" # a string to put at the beginning of metric keys
      entity: "WeatherODE" # set to name of your wandb team
      group: "WeatherODE_exp"
      tags: ['era5', 'forecast', 'multi_gt']
      job_type: ""
  
  # logger:
  #   class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
  #   init_args:
  #     save_dir: ${trainer.default_root_dir}/logs
  #     name: null
  #     version: null
  #     log_graph: False
  #     default_hp_metric: True
  #     prefix: ""

  callbacks:
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints"
        monitor: "val/w_rmse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: True # additionaly always save model from last epoch
        verbose: False
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: False

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "val/w_rmse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 2 # how many validation epochs of not improving until training stops
        min_delta: 0. # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  lr: 5e-3
  ode_lr: 5e-6
  beta_1: 0.9
  beta_2: 0.99
  weight_decay: 1e-5
  warmup_epochs: 20000
  max_epochs: 100000
  warmup_start_lr: 1e-8
  eta_min: 1e-8
  pretrained_path: ""
  gradient_clip_val: 0.1
  gradient_clip_algorithm: "value"
  train_noise_only: False

  net:
    class_path: weatherode.ode.WeatherODE
    init_args:
      default_vars: [
          "land_sea_mask",
          "orography",
          "lattitude",
          "2m_temperature",
          "10m_u_component_of_wind",
          "10m_v_component_of_wind",
          "geopotential_50",
          "geopotential_250",
          "geopotential_500",
          "geopotential_600",
          "geopotential_700",
          "geopotential_850",
          "geopotential_925",
          "u_component_of_wind_50",
          "u_component_of_wind_250",
          "u_component_of_wind_500",
          "u_component_of_wind_600",
          "u_component_of_wind_700",
          "u_component_of_wind_850",
          "u_component_of_wind_925",
          "v_component_of_wind_50",
          "v_component_of_wind_250",
          "v_component_of_wind_500",
          "v_component_of_wind_600",
          "v_component_of_wind_700",
          "v_component_of_wind_850",
          "v_component_of_wind_925",
          "temperature_50",
          "temperature_250",
          "temperature_500",
          "temperature_600",
          "temperature_700",
          "temperature_850",
          "temperature_925",
          "relative_humidity_50",
          "relative_humidity_250",
          "relative_humidity_500",
          "relative_humidity_600",
          "relative_humidity_700",
          "relative_humidity_850",
          "relative_humidity_925",
          "specific_humidity_50",
          "specific_humidity_250",
          "specific_humidity_500",
          "specific_humidity_600",
          "specific_humidity_700",
          "specific_humidity_850",
          "specific_humidity_925",
        ]
      img_size: [32, 64]
      layers: [5, 5, 3, 2]
      hidden: [512, 128, 64]
      depth: 4
      method: "euler"
      drop_rate: 0.1
      time_steps: 36
      time_interval: 0.001
      rtol: 1e-9
      atol: 1e-11
      predict_list: [1,2,3,4,5,6]
      gradient_loss: False
      err_type: DiT
      err_with_v: False
      err_with_x: False

# ---------------------------- DATA -------------------------------------------
data:
  root_dir: /mnt/workgroup/5.625deg_npz
  variables: [
          "land_sea_mask",
          "orography",
          "lattitude",
          "2m_temperature",
          "10m_u_component_of_wind",
          "10m_v_component_of_wind",
          "geopotential_50",
          "geopotential_250",
          "geopotential_500",
          "geopotential_600",
          "geopotential_700",
          "geopotential_850",
          "geopotential_925",
          "u_component_of_wind_50",
          "u_component_of_wind_250",
          "u_component_of_wind_500",
          "u_component_of_wind_600",
          "u_component_of_wind_700",
          "u_component_of_wind_850",
          "u_component_of_wind_925",
          "v_component_of_wind_50",
          "v_component_of_wind_250",
          "v_component_of_wind_500",
          "v_component_of_wind_600",
          "v_component_of_wind_700",
          "v_component_of_wind_850",
          "v_component_of_wind_925",
          "temperature_50",
          "temperature_250",
          "temperature_500",
          "temperature_600",
          "temperature_700",
          "temperature_850",
          "temperature_925",
          "relative_humidity_50",
          "relative_humidity_250",
          "relative_humidity_500",
          "relative_humidity_600",
          "relative_humidity_700",
          "relative_humidity_850",
          "relative_humidity_925",
          "specific_humidity_50",
          "specific_humidity_250",
          "specific_humidity_500",
          "specific_humidity_600",
          "specific_humidity_700",
          "specific_humidity_850",
          "specific_humidity_925",
    ]
  out_variables: [
          "2m_temperature",
          "10m_u_component_of_wind",
          "10m_v_component_of_wind",
          "geopotential_50",
          "geopotential_250",
          "geopotential_500",
          "geopotential_600",
          "geopotential_700",
          "geopotential_850",
          "geopotential_925",
          "u_component_of_wind_50",
          "u_component_of_wind_250",
          "u_component_of_wind_500",
          "u_component_of_wind_600",
          "u_component_of_wind_700",
          "u_component_of_wind_850",
          "u_component_of_wind_925",
          "v_component_of_wind_50",
          "v_component_of_wind_250",
          "v_component_of_wind_500",
          "v_component_of_wind_600",
          "v_component_of_wind_700",
          "v_component_of_wind_850",
          "v_component_of_wind_925",
          "temperature_50",
          "temperature_250",
          "temperature_500",
          "temperature_600",
          "temperature_700",
          "temperature_850",
          "temperature_925",
          "relative_humidity_50",
          "relative_humidity_250",
          "relative_humidity_500",
          "relative_humidity_600",
          "relative_humidity_700",
          "relative_humidity_850",
          "relative_humidity_925",
          "specific_humidity_50",
          "specific_humidity_250",
          "specific_humidity_500",
          "specific_humidity_600",
          "specific_humidity_700",
          "specific_humidity_850",
          "specific_humidity_925",
    ]
  predict_range: 6
  hrs_each_step: 1
  buffer_size: 10000
  batch_size: 128
  num_workers: 1
  pin_memory: False
